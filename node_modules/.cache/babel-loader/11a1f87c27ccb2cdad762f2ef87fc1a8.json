{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmayhew/Desktop/Folders/macProjects/Udemy/React.js/ProjectOne/react_components_hew/src/components/totals/Amounts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../ui/Card';\nimport '../css/Amounts.css';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Amounts = data => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2880');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  }; // Only items matching the fitered year will be kept in the filteredExpenses array\n\n\n  const filteredExpenses = data.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"amounts\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Amounts, \"/EFvbfXfX2xOJUbYvWid9/cWINg=\");\n\n_c = Amounts;\nexport default Amounts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Amounts\");","map":{"version":3,"sources":["/Users/aaronmayhew/Desktop/Folders/macProjects/Udemy/React.js/ProjectOne/react_components_hew/src/components/totals/Amounts.js"],"names":["React","useState","ExpenseItem","Card","Filter","Amounts","data","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD,CAJsB,CAQtB;;;AAEA,QAAMC,gBAAgB,GAAGL,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkBC,OAAO,IAAI;AAClD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACH,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACnC,QAAC,WAAD;AAEA,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFf;AAGA,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHhB;AAIA,MAAA,IAAI,EAAER,OAAO,CAACC;AAJd,OACKD,OAAO,CAACS,EADb;AAAA;AAAA;AAAA;AAAA,YADc,CAAlB;AAQH;;AAED,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEhB,YAAlB;AAAgC,QAAA,cAAc,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKS,eAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnCD;;GAAMb,O;;KAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../ui/Card';\nimport '../css/Amounts.css';\nimport Filter from './Filter'\n\n\nconst Amounts = (data) => {\n\n    const [filteredYear, setFilteredYear] = useState('2880');\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    // Only items matching the fitered year will be kept in the filteredExpenses array\n\n    const filteredExpenses = data.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    let expensesContent = <p>No Expenses Found</p>;\n\n    if (filteredExpenses.length > 0) {\n        expensesContent = filteredExpenses.map((expense) => (\n            <ExpenseItem \n            key={expense.id}\n            title={expense.title} \n            amount={expense.amount} \n            date={expense.date} \n        />\n        ))\n    }\n\n    return (\n        <div>\n            <Card className=\"amounts\">\n                <Filter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n                {expensesContent}\n            </Card>\n        </div>\n    );\n}\n\nexport default Amounts;"]},"metadata":{},"sourceType":"module"}